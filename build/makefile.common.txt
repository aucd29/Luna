SHELL = /bin/sh
 
SOLUCTION_DIR           := ../../../
SOLUCTION_BUILD_DIR     := $(SOLUCTION_DIR)build/
SOLUCTION_INC_DIR       := -I$(SOLUCTION_DIR)Library -I$(SOLUCTION_DIR)FossLibrary -I$(SOLUCTION_DIR)ProductLibrary -I$(SOLUCTION_DIR)ThirdPartyLibrary
SOLUCTION_INC_EX_DIR    := 
SOLUCTION_LIB_DIR       := $(SOLUCTION_BUILD_DIR)lib

ifndef TARGET
  error "TARGET is not defined!"
endif

ifndef TARGET_TYPE
  error "TARGET_TYPE is not defined!"
endif

ifeq ($(TARGET_TYPE),lib)
  TARGET_FILE = lib$(TARGET).a
endif

ifeq ($(TARGET_TYPE), shared_lib)
  TARGET_FILE = lib$(TARGET).so
endif

ifneq ($(sip),)
   ifeq ($(sip),1)
      EMTA_TYPE = sip
   endif
endif
 
ifeq ($(TARGET_TYPE),exe)
  TARGET_FILE           := $(TARGET)

endif

ifeq ($(TARGET_TYPE),exe)
  ifeq ($(PLATFORM),win32)
    TARGET_FILE = $(TARGET).exe
  endif
endif

#----------------------------------------------------------
# Shell commands
#----------------------------------------------------------
CP      = cp
MKDIR   = mkdir
RMDIR   = rmdir
RM      = rm

#----------------------------------------------------------
# Select toolset
#----------------------------------------------------------
ifndef TOOLSET
    ifeq ($(PLATFORM),)
        TOOLSET = $(CPU)
    else
        TOOLSET = $(PLATFORM).$(CPU)
    endif
else
    TOOLSET = i386
endif

ifndef TOOLSET_PRODUCT
    TOOLSET_PRODUCT = $(PRODUCT)
endif

#
# toolset include
#
include $(SOLUCTION_BUILD_DIR)makefile.toolset.$(TOOLSET).txt

ifeq ($(TOOLSET_PRODUCT),)
    BASE_OUTPUT_DIR = $(PLATFORM)-$(CPU)-$(BUILD)
else
    BASE_OUTPUT_DIR = $(PLATFORM)-$(CPU)-$(PRODUCT)-$(BUILD)
endif

SOLUCTION_LIB_OUTPUT_DIR = $(PLATFORM)-$(CPU)-$(BUILD)

#----------------------------------------------------------
# Platform configuration
#----------------------------------------------------------

#----------------------------------------------------------
# Search paths
#----------------------------------------------------------

INCLUDE = -I. -I.. -I./src $(PRJ_INCLUDE) $(SOLUCTION_INC_DIR) -I$(SOLUCTION_INC_EX_DIR) \
          $(PLATFORM_INC) 

LIBDIR = $(SOLUCTION_LIB_DIR)/$(SOLUCTION_LIB_OUTPUT_DIR)

_LIBS = $(foreach lib,$(LIBS),$(LIBDIR)/$(lib)) $(TOOLSET_LIBS) $(PRJ_LIBS)
_LIBS_FOR_SHARED = $(foreach lib,$(LIBS),$(LIBDIR)/$(lib)) $(PRJ_LIBS)


#----------------------------------------------------------
# Output paths
#----------------------------------------------------------
ifndef BASEDIR
BASEDIR = .
endif

ifndef OBJDIR
OBJDIR := $(BASEDIR)/$(BASE_OUTPUT_DIR)

ifeq ($(TARGET_TYPE), shared_lib)
OBJDIR := $(BASEDIR)/$(BASE_OUTPUT_DIR)-SHARED
endif

endif

ifndef OUTDIR
OUTDIR := $(SOLUCTION_LIB_DIR)/$(SOLUCTION_LIB_OUTPUT_DIR)
endif

#----------------------------------------------------------
# Prerequisites
#----------------------------------------------------------
SRCS    := $(foreach dir,$(SRCDIRS),$(wildcard $(dir)/*.c $(dir)/*.cpp $(dir)/*.cxx))
OBJS    := $(patsubst %.cxx,$(OBJDIR)/%.o,$(patsubst %.cpp,$(OBJDIR)/%.o,$(patsubst %.c,$(OBJDIR)/%.o,$(SRCS))))
HEADERS := $(foreach dir,include,$(wildcard $(dir)/*))

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .o .elf .mod

# Include generated dependency files.
include $(OBJS:.o=.d)

#----------------------------------------------------------
# Root targets
#----------------------------------------------------------
all:	$(OUTDIR)/$(TARGET_FILE)
ifneq ($(TARGET_TYPE),exe)
#   by kmansoo@gmail.com, Do not copy the target file.
#	$(CP) -Rf $(LIBDIR)/*  $(SOLUCTION_LIB_DIR)/.
endif

clean:
	$(RM) -r $(OBJDIR)
ifneq ($(TARGET_TYPE),exe)
	$(RM) -f $(OUTDIR)/$(TARGET_FILE)
endif

#----------------------------------------------------------
# Deployment rules
#----------------------------------------------------------
$(OUTDIR)/$(TARGET_FILE): $(OBJDIR)/$(TARGET_FILE)
	@mkdir -p $(OUTDIR)
ifneq ($(TARGET_TYPE),exe)
	$(CP) $< $@
endif

#----------------------------------------------------------
# Build rules
#----------------------------------------------------------
$(OBJDIR)/$(TARGET).mod: $(OBJDIR)/$(TARGET).elf
	$(HEXTOOL) -output $@ -bin $<
	
$(OBJDIR)/$(TARGET).elf: $(OBJS) $(_LIBS)
	$(LD) $(LDFLAGS) $^ -o $@

$(OBJDIR)/$(TARGET): $(OBJS) #$(_LIBS)
	$(LD) $(LDFLAGS) $^ $(_LIBS) -o $@
#----------------------------------------------------------
#   symbol section
#----------------------------------------------------------
ifdef   PRJ_POSTBUILD_ACTION
	$(PRJ_POSTBUILD_ACTION) $@ $(PRJ_POSTBUILD_ACTION_PARAM)
endif

ifdef   PRJ_STRIP_DEBUG_INFO
	$(STRIP) $@
endif

#----------------------------------------------------------
#   .a
#----------------------------------------------------------
ifdef RANLIB
$(OBJDIR)/lib$(TARGET).a: $(OBJS)
	$(LIB_ARCHIVE) $(LIB_ARCHIVE_FLAGS) $@ $^
	$(RANLIB) $@
else
$(OBJDIR)/lib$(TARGET).a: $(OBJS)
	$(LIB_ARCHIVE) $(LIB_ARCHIVE_FLAGS) $@ $^    
endif

$(OBJDIR)/lib$(TARGET).so: $(OBJS)
	$(CXX) -shared -Wl,-soname,$(TARGET_FILE) -o $@ $^ -lpthread -lstdc++ $(_LIBS_FOR_SHARED)

$(OBJDIR)/%.o: %.c
	@$(MKDIR) -p $(subst /_mskim_,$(null), $(addsuffix _mskim_, $(dir $@)))
	$(CXX) $(CFLAGS_EX) $(INCLUDE) $(CFLAGS) $< -o $@

$(OBJDIR)/%.o: %.cpp
	@$(MKDIR) -p $(subst /_mskim_,$(null), $(addsuffix _mskim_, $(dir $@)))
	$(CXX) $(CPPFLAGS_EX) $(INCLUDE) $(CFLAGS) $(CXXFLAGS) $< -o $@

$(OBJDIR)/%.o: %.cxx
	@$(MKDIR) -p $(subst /_mskim_,$(null), $(addsuffix _mskim_, $(dir $@)))
	$(CXX) $(CPPFLAGS_EX) $(INCLUDE) $(CFLAGS) $(CXXFLAGS) $< -o $@

$(OBJDIR)/%.d: %.c
	@$(MKDIR) -p $(subst /_mskim_,$(null), $(addsuffix _mskim_, $(dir $@)))
	@set -e; rm -f $@;
	$(CXX) -M $(INCLUDE) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($(notdir $*)\)\.o[ :]*,$(dir $*)\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(OBJDIR)/%.d: %.cpp
	@$(MKDIR) -p $(subst /_mskim_,$(null), $(addsuffix _mskim_, $(dir $@)))
	@set -e; rm -f $@;
	$(CXX) -M $(INCLUDE) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$ \
	rm *.d

$(OBJDIR)/%.d: %.cxx
	@$(MKDIR) -p $(subst /_mskim_,$(null), $(addsuffix _mskim_, $(dir $@)))
	@set -e; rm -f $@;
	$(CXX) -M $(INCLUDE) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$
